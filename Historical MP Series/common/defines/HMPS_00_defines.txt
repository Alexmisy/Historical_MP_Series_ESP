NPops = {
	NUM_WEALTH_LEVELS = 99
	
	POP_WEIGHT_MODIFIER_MAX_SCALE = 100			# The maximum scale applied to weight modifiers on the pop portrait
	
	DEFAULT_POP_TYPE = "laborers"				# Used by: create_pop effects; migration; injured military leaving their outposts; slaves default employment role; etc.
	SLAVE_POP_TYPE = "slaves"					# This is the type of pop that debtors will become

	POP_SIZE_PACKAGE = 10000					# "Normal" pop size used as a divisor on population when determining e.g. Needs to buy, wages to pay, etc
	
	WEALTH_PROGRESS_WANTED_BUFFER = 1.02		# A pop wants at least as much income as this x the next level buy package costs to increase its wealth
	WEALTH_PROGRESS_ACCEPTABLE_DEFICIT = 0.98	# A pop won't change wealth level if they can still afford this much of their current buy package costs
	WEALTH_PROGRESS_INCREASE = 0.2				# How fast wealth increases when a pop has money for higher grade buy packages. This factor is modified by how large the difference between income and cost is
	WEALTH_PROGRESS_DECREASE = 0.1				# How fast wealth decrease when a pop can no longer afford its buy package. This factor is modified by how large the difference between income and cost is
	WEALTH_PROGRESS_DECREASE_DEFICIT_MULT = 5

	RADICALS_MAX_FROM_LOW_SOL = 0.1				# If pop is already this % radical, don't add more radicals from low SOL (Scales by delta between SoL and expected min SoL)
	RADICALS_MAX_FROM_DISCRIMINATION = 0.5		# If pop is already this % radical, don't add more radicals from discrimination (Scales by literacy)
	RADICALS_MONTHLY_FROM_LOW_SOL = 0.001		# Scales by delta between SoL and expected min SoL
	RADICALS_MONTHLY_FROM_DISCRIMINATION = 0.005 # Scales by literacy	

	ASSIMILATION_RATE = 0.002					# Percentage of pops who will Assimilate into a different Culture each month, if eligible
	MIN_ASSIMILATION = 1000						# If there is any assmiliation at least this many people will assimilate
	CONVERSION_RATE = 0.002						# Percentage of pops who will Convert into a different Religion each month, if eligible
	MIN_CONVERSION = 10							# If there is any conversion at least this many people will convert
	
	OBSESSION_DEMAND_MIN = 1.0					# The minimum relative demand of an obsession (overrides min demand in buy package goods categories)
	OBSESSION_DEMAND_MULT = 2.0					# Demand of an obsession is multiplied by this
	MIN_POPS_FOR_NEW_OBSESSION = 50000			# At least this many pops of a culture must live in a market to get an obsession from its goods
	MIN_SUPPLY_LEVEL_FOR_NEW_OBSESSION = 0.75	# Supply needs to be at least this times the demand
	MIN_DEMAND_VALUE_FOR_NEW_OBSESSION = 1000	# At this amount of (number of units * goods base price) needs to be demanded in a market to create a new obsession
	MAX_NUM_OBSESSIONS = 3						# A culture can only have this number of obsessions at the same time
	OBSESSION_SPAWN_CHANCE = 0.1				# Per year (1.0 = 1%), multiplied by goods supply and market size mult
	OBSESSION_SPAWN_CHANCE_MAX_SUPPLY_MULT = 3.0		# Supply relative to demand above this isn't factored into spawn chance
	SUBSTITUTION_WEIGHT_MULT = 5.0				# The weight of a substitutable good that has 100% of the supply share
	TABOO_DEMAND_MULT = 0.5						# Demand of a taboo is multiplied by this
	MAX_DEMAND_ADJUSTMENT_BASE_AMOUNT = 0.01	# Controls how much a pop can change demand of a substituable goods in a single update (base)
	MAX_DEMAND_ADJUSTMENT_SCALED_AMOUNT = 0.09	# Controls how much a pop can change demand of a substituable goods in a single update (scaled)
	MAX_DEMAND_ADJUSTMENT_SCALE = 1.0			# At this delta between target and current demand, apply max demand adjustment scale

	OBSESSION_POP_NEED_EXPENSE_MULT = 0.25		# Total spent on pop needs including obsessions is changed by this (scaled by number of obsessions, money is given or taken from other needs)
	TABOO_POP_NEED_EXPENSE_MULT = -0.25			# Total spent on pop needs including taboos is changed by this (scaled by number of taboos, money is given or taken from other needs)
	
	WORKING_ADULT_RATIO_BASE = 0.25				# Base ratio of working adults to dependents, this can be overridden by pop type definition and country modifiers.
	WORKING_ADULT_RATIO_SKEW_MAXIMUM = 2.0		# When the ratio of working adults to dependents is skewed, it tends to correct itself, this value clamps the maximum effect of this
	DEPENDENT_CONSUMPTION_RATIO = 0.5			# Dependents consume this multiple of Needs compared to Working Adults
	
	SUBSISTENCE_DIVIDENDS_MULT = 0.5
	
	LITERACY_DIEOFF_BIAS = 0.7					# Percentage of literate pops who die of old age compared to the current literacy rate, the higher this value the faster the population becomes illiterate when literacy suffers
	
	DISCRIMINATION_BASE = 25					# The base value of discrimination for a discriminated pop; maps to the % pay cut they take and the level of Turmoil they get
	SOL_ADJUSTMENT_POP_IMPACT_FACTOR = 0.05		# How large part of a pop become revolutary/loyalist or stop being revolutionary/loyalist as a result of a change in standard of living
	
	SOL_STARVING_THRESHOLD = 5
	SOL_STRUGGLING_THRESHOLD = 10
	
	LOW_POP_THRESHOLD = 5000					# If a state has less than this amount of pops per arable land, apply the low pop modifier
	HIGH_POP_THRESHOLD = 100000					# If a state has more than this amount of pops per arable land, apply the high pop modifier
	
	MIGRATION_PULL_EMPTY_STATE = 100				# If a state has no pops at all, give it a huge migration pull
	MIGRATION_PULL_FROM_LIVING_STANDARD = 1			# Migration pull from each point of average living standard in target state	
	MIGRATION_PULL_UNEMPLOYMENT_POPS_MIN = 10000 		# At less than this in number of unemployed pops, do not apply unemployment divisor
	MIGRATION_PULL_UNEMPLOYMENT_POPS_FOR_MAX_DIV = 100000 # Num unemployed pops to apply max amount of unemployment divisor
	MIGRATION_PULL_UNEMPLOYMENT_DIV = 10				# At above max unemployed pops, migration pull is divided by this
	
	# The below factors are applied *after* migration pull threshold checks, so they only impact how large a share of migration a state gets
	MIGRATION_PULL_MULT_FROM_CULTURE_TARGET = 20.0			# Migration pull multiplied by this from target state being a cultural migration target
	MIGRATION_PULL_MULT_FROM_CULTURE_TARGET_ADJACENCY = 5.0	# Migration pull multiplied by this from target state being next to a cultural migration target
	MIGRATION_PULL_MULT_FROM_NO_DISCRIMINATION = 1.0		# Migration pull multiplier increased by this if pop is moving from discrimination to no discrimination (not applied to mass migration targets)
	MIGRATION_PULL_MULT_FROM_HOMELANDS = 0.5				# Migration pull  multiplier increased by this if pop is moving to cultural homelands (not applied to mass migration targets)
	
	# General factors for how many pops will migrate
	MIGRATION_PULL_HIGH_THRESHOLD = 1.25						#	State must have a migration pull of at least market average * this to get economic immigration
	MIGRATION_PULL_LOW_THRESHOLD = 0.75							# State must have a migration pull of less or equal than market average * this to get full amount of emigration
	ECONOMIC_MIGRATION_BASE = 0.02								# Base amount of a pop that wants to move for economic reasons
	ECONOMIC_MIGRATION_FROM_SOL_DIFFERENCE = 0.01				# Each point of difference of pop SoL to the market's average SoL makes this fraction of the pop want to economically migrate (in %)
	ECONOMIC_MIGRATION_STATE_POPULATION_THRESHOLD = 100000				# States with less pops than this have reduced economic emigration numbers to avoid total depopulation
	CULTURAL_MIGRATION_BASE = 0.05								# Base amount of a pop that wants to move due to mass migration
	CULTURAL_MIGRATION_FROM_RADICALS = 0.05						# At 100% radicals, this fraction of the pop wants to mass migrate
	MIGRATION_UNEMPLOYMENT_MULT = 10.0							# Amount of migration from SoL is increased by this when a pop is unemployed
	MIGRATION_MIN_STATE_POPS = 20000							# A state with less pops than this will not get emigration
	MIGRATION_MIN_POP_AMOUNT = 1								# No less than this amount of a pop can migrate each week (if any migration at all should happen)
	MIGRATION_MAX_POP_AMOUNT = 10000							# No more than this amount of a pop can migrate each week
	MIGRATION_MAX_PER_STATE_BASE = 500							# No more than this amount of people can move from or to a state in a single week (base)	
	MIGRATION_MAX_PER_STATE_INFRASTRUCTURE = 10					# No more than this amount of people can move from or to a state in a single week (scales with infrastructure)
	MIGRATION_MAX_PER_STATE_UNEMPLOYMENT_ORIGIN_FRACTION = 0.05	# The amount of unemployed workers in a state * this value is added to how many people can move from it
	MIGRATION_MAX_PER_STATE_UNEMPLOYMENT_TARGET_FRACTION = 0.05	# The amount of unemployed workers in a state * this value is removed from how many people can move to it
	MIGRATION_MAX_PER_STATE_CULTURAL_MIGRATION_MULT = 5.0		# Weekly migration caps are multiplied by this amount by this for cultural-type migration
	MIGRATION_AVERAGE_ATTRACTION_EMIGRATION_MULT = 0.25			# States with an average migration attraction gets this multiplier to emigrants
	
	# Factors for creating mass migration targets
	MIGRATION_CULTURE_TARGET_TURMOIL = 0.2				# Create one migration target for this amount of cultural turmoil
	MIGRATION_CULTURE_TARGET_MIN_PULL = 10				# A state must have at least this in migration pull to be picked as a mass migration target
	MIGRATION_CULTURE_TARGET_MIN_MARKET_POPS = 100000	# A market must have at least this many possible migrants to trigger a mass migration
	MIGRATION_CULTURE_TARGET_MIN_STATE_POPS = 10000		# A state must have at least this many possible migrants for mass emigration to occur
	MIGRATION_CULTURE_TARGET_MIN_MARKET_ACCESS = 0.5	# A state must have at least this much market access to their market to be a mass migration target
	MIGRATION_CULTURE_TARGET_MIN_ARABLE_LAND = 30		# A state must have at least this much arable land to be a mass migration target
	MIGRATION_CULTURE_TARGET_APPEAR_CHANCE = 0.2 		# Per week (1 = 1%)
	MIGRATION_CULTURE_TARGET_APPEAR_CHANCE_STRUGGLING_FACTOR = 0.1 # Chance increases by this for each point of SoL below 10
	MIGRATION_CULTURE_TARGET_APPEAR_CHANCE_STARVING_FACTOR = 0.5 # Chance increases by this for each point of SoL below 5 (added on top of struggling factor)
	MIGRATION_CULTURE_TARGET_RANDOM_FACTOR = 3			# The higher this is, the more random the selection of mass migration targets will be
	MIGRATION_CULTURE_TARGET_DURATION = 1				# In years

	COLONIAL_GROWTH_BASE_FACTOR = 0.00001				# Colonial growth generated by a state is ( total pops / 1000 ) * this * modifier from institution
	MIN_BASE_COLONIAL_GROWTH = 0.01						# Country base colonial growth from population cannot be lower than this
	MAX_BASE_COLONIAL_GROWTH = 0.1						# Country base colonial growth from population cannot be higher than this
	MAX_COLONIAL_GROWTH = 0.02							# Colonies can grow by this much at most per day 
	
	INDIVIDUALS_PER_POP_INFRASTRUCTURE = 10000			# Multiply state_infrastructure_from_population_add by this to determine infra from population

	QUALIFICATIONS_UPDATE_FACTOR = 0.0003				# Calculated potential values are multiplied by this value and the workforce size of the pop before being added to the existing potentials
	QUALIFICATIONS_NUM_MONTHS_AT_START = 60				# How many months of qualifications should be seeded to pops at start of game?
	
	INDIVIDUALS_TAXED_PER_TAX_CAPACITY = 10000			# How many pops can be taxed efficiently for each tax capacity
} 

NEconomy = {
	MAX_WEEKLY_CONSTRUCTION_PROGRESS = 20				# Max construction progress per week on a single project

	# The number of times the initializewealth function is run during setup
	# The more times you run this the more accurate setup will be for Pop wealth compared to income	
	NUM_TIMES_TO_INITIALIZE_WEALTH = 10					
	
	COUNTRY_GDP_MODIFIER_DIVISOR = 1000					# Scale the country_gdp static modifier by this divisor
	
	ECONOMY_OF_SCALE_START_LEVEL = 5					# Level at which buildings start getting economy of scale bonuses. Levels lower than this value provide no bonus [>=1]
	
	IN_DEFAULT_MINIMUM_PENALTY_SCALE = 0.1				# This amount of the 'in default' throughput penalty is applied right away
	IN_DEFAULT_DAYS_TO_FULL_PENALTY = 182				# How many days of being in default does it take to get the full throughput penalty
	DECLARE_BANKRUPTCY_PENALTY_DURATION_YEARS = 10		# How many years does it take for penalties from declaring bankruptcy to fully decay
	DECLARE_BANKRUPTCY_RADICALIZATION_SHARES_FACTOR = 0.1 # For each per-pop shares in their building, radicalize this percentage of a pop on declaring bankruptcy
	
	DOWNSIZE_BUILDING_POP_TYPE_RADICALIZATION_SHARED_FACTOR = 0.05 # This percentage of a pop becomes radicalized when a building they would have ownership shares in is downsized in the state (multiplied by per-pop shares)
	FIRED_POP_RADICALIZATION_BASE_FRACTION = 0.2		# This percentage of a pop becomes radicalized when they lose their job, for instance due to a building being downsized
	FIRED_POP_RADICALIZATION_SHARES_FACTOR = 0.1		# Additional percentage of pop that becomes radicalized they lost their job for each per-pop share they had in the building			

	POLLUTION_TARGET_DIVISOR_BASE = 1					# Base value to divide total pollution generation by for calculating state region pollution target level
	POLLUTION_TARGET_DIVISOR_ARABLE_LAND_MULT = 0.1		# Amount per arable land to add to pollution divisor
	POLLUTION_CHANGE_SPEED = 0.5						# Each day, pollution in state region changes by this amount towards target
	POLLUTION_MAX = 255
	POLLUTION_SPREAD_TO_NEIGHBOR = 0.25					# Adjacent state regions always have at least this much of their neighbor's pollution level

	MARKET_UPDATE_COUNT = 5						# How many markets have their buy package caches updated per tick
	
	GOODS_LEADERBOARD_SIZE = 10					# How many spots there are on each goods leaderboard
	MIN_SPOT_PRESTIGE_AWARD = 3					# How many spots on the goods leaderboard get awarded Prestige
	
	MIN_GOODS_PRICE	= 1							# A good cannot have a lower base price than this
	PRICE_RANGE = 0.75							# min price of a good is base * (1 - PRICE_RANGE), Max price is base * (1 + PRICE_RANGE), PRICE_RANGE is locked to [0-1]
	BUY_SELL_DIFF_AT_MAX_FACTOR = 2				# the difference between buy/consumption and sell/production at min/max pricing, e.g. if set to 4 then if buy orders are 4x sell orders price is maxed
	
	GOODS_SHORTAGE_PENALTY_THRESHOLD = 0.5		# If supply / demand is lower than this, start applying output penalties, by default this should be ( 1 / BUY_SELL_DIFF_AT_MAX_FACTOR )
	GOODS_SHORTAGE_PENALTY_INCREASE_SPEED = 0.01  	# Goods shortage penalty increases by this fraction of the target each day
    GOODS_SHORTAGE_PENALTY_DECREASE_SPEED = 0.01  	# Goods shortage penalty goes down by this fraction of GOODS_SHORTAGE_PENALTY_MAX each day
    GOODS_SHORTAGE_PENALTY_MIN = 0.05			# Goods shortage penalty can't be lower than this if there is any shortage
	GOODS_SHORTAGE_PENALTY_MAX = 0.5			# Goods shortage penalty can't be higher than this
	
	# If the delta between a historical trade route's level and its predicted level after gamestate init is at least this, print an error 
	# We only care if the trade route is bigger than it can support - it's fine for historical routes to grow after game start!
	TRADE_ROUTE_HISTORICAL_LEVEL_DIFF_WARNING = 2		
	
	TRADE_ROUTE_BUREAUCRACY_COST = 20					# The cost in BUR per trade route
	TRADE_ROUTE_START_LEVEL = 1							# All new trade routes start at this level
	TRADE_ROUTE_MAX_LEVEL = 100							# Trade routes cannot be higher level than this
	TRADE_ROUTE_MIN_TOTAL_IMPORTS = 10					# This amount of a good can always be imported to a market even if there is no demand
	TRADE_ROUTE_DEFAULT_GOODS_QUANTITY = 10				# Base quantity traded from trade routes, if not otherwise specified in goods type
	TRADE_ROUTE_ECONOMY_OF_SCALE = 0.25						# Each level of trade route after the first adds this % to desired trade quantity
	TRADE_ROUTE_ECONOMY_OF_SCALE_MAX_LEVEL = 20			# After this level, trade route economy of scale no longer increases the amount per level
	TRADE_ROUTE_REQUIRED_CONVOY_BUFFER = 0.05			# Trade routes may not increase level if you wouldn't end up with at least this 'buffer' of produced convoys
	
	TRADE_ROUTE_AUTO_INCREASE_EMPLOYMENT_THRESHOLD = 0.9 	# If trade route has this much of its max staffing level employed, it can automatically increase its level
	TRADE_ROUTE_AUTO_INCREASE_ACCEPTABLE_REVENUE_DIFFERENCE = 1.1 # Multiply revenue of new trade route level by this for the purpose of considering whether it's OK to auto-increase level (means that trade routes can level up even when slightly decreasing overall revenue)
	TRADE_ROUTE_AUTO_INCREASE_LOW_PRODUCTIVITY_THRESHOLD = 8 # If trade route's productivity would drop below this, don't automatically increase its level
	TRADE_ROUTE_AUTO_REDUCTION_EMPLOYMENT_THRESHOLD = 0.75 	# If trade route has less than this of its max staffing level employed and could not hire anyone last week, it can automatically decrease its level
	TRADE_ROUTE_AUTO_REDUCTION_ACCEPTABLE_REVENUE_DIFFERENCE = 1.15 # Multiply revenue of current trade route level by this for the purpose of considering whether we should auto-decrease level (means that trade routes won't level down just for the purpose of a small revenue increase)
	
	TRADE_CENTER_MIN_AVAILABLE_WORKFORCE = 20000 # Don't put new trade centers in places with less available workforce than this
	TRADE_CENTER_TRADE_ROUTE_STATE_FACTOR = 4	# When deciding trade center for a trade route, increase score by this if the state is the exit/entry port for the trade route
	TRADE_CENTER_TRADE_ROUTE_STATE_NEIGHBOR_FACTOR = 2	# When deciding trade center for a trade route, increase score by this if the state neighboring the exit/entry port for the trade route
	TRADE_CENTER_TREATY_PORT_FACTOR = 15 	# When deciding trade center for a trade route, increase score by this for treaty port in the remote market
	TRADE_CENTER_MARKET_CAPITAL_FACTOR = 5 	# When deciding trade center for a trade route, increase score by this for the market capital in the market
	TRADE_CENTER_PORT_LEVEL_FACTOR = 1 	# When deciding trade center for a trade route, multiply port level by this and add to the score
	TRADE_CENTER_EXISTING_TRADE_ROUTES_FACTOR = -1  # When deciding trade center for a trade route, multiply the number of trade routes already associated with the state by this score
	
	COMPETITIVENESS_PER_TRADE_ROUTE = 100		# Base competitiveness for a trade route
	COMPETITIVENESS_DOMESTIC_TRADE_MULT = 0.5	# Competiveness is multiplied by this if trading country and market controller are the same country
	COMPETITIVENESS_TRADE_AGREEMENT_MULT = 0.5	# Competiveness is multiplied by this if trading country and market controller have a trade agreement
	
	MARKET_SHARE_FROM_GDP = 1.0					# Get this many points of market share per pound of GDP in states
	MARKET_SHARE_MARKET_CONTROLLER_FACTOR = 1.33	# Market controller's market points count for this much more
	MARKET_SHARE_MARKET_ACCESS_BASE = 0.5		# How much of market points is always gained regardless of market access
	MARKET_SHARE_MARKET_ACCESS_SCALED = 0.5		# How much of market points is gained based on market access

	COUNTRY_MIN_CREDIT_BASE = 100000			# Added to the total Building Cash Reserves to determine credit limit (base)
	COUNTRY_MIN_CREDIT_SCALED = 0.05 			# Added to the total Building Cash Reserves to determine credit limit (multiplied by GDP)
	GOLD_RESERVE_RATIO_AT_START = 0.5			# Unless a country history's 'treasury' parameter is set to a non-zero value, countries start with this ratio of their gold reserve in gold
	BUILDING_INITIAL_WAGE_WEEKS = 2				# A building will not adjust its wages for the first this many weeks of its existence
	MAX_WAGE_STEP_CHANGE = 0.1					# Wage rates can change at most this much each week
	SUBSIDIES_MIN_GAIN = 0						# If a building is subsidized, it will always collect enough subsidies to ensure at least this weekly cash reserve growth
	HIRING_RATE = 0.1 							# Weekly hiring limit applied in a building per profession as a ratio of full employment
	EMPLOYMENT_PROPORTIONALITY_LIMIT = 0.1		# A building cannot have a difference of ratio of full employment between any two professions greater than this limit
	BUILDING_INIT_PROFIT_TARGET_MIN = 0.10 		# Minimum % income a building wants to have as profit during initialization (will decrease wages towards this)
	BUILDING_INIT_PROFIT_TARGET_MAX = 0.20 		# Maximum % income a building wants to have as profit during initialization (will increase wages towards this)
	BUILDING_PROFIT_TARGET_TO_RAISE_WAGES = 0.2	# Required profit margin raise wages no matter what, with BUILDING_WEEKS_BETWEEN_PAY_RAISES weeks cooldown
	BUILDING_WEEKS_BETWEEN_PAY_RAISES = 26		# Cooldown between pay raises no matter what
	MIN_RAISE_TO_HIRE = 0.10					# The minimum required increase in wages for an employee to switch jobs (1.0 = +100% = x2)
	BASE_RESOURCE_DISCOVER_CHANCE = 0.02 		# Per day (1.0 = 1%)
	EMPLOYMENT_RESOURCE_DEPLETE_CHANCE = 0.005	# Multiplied by number of fully employed levels of the building
	RESOURCE_DISCOVER_MIN_FRACTION = 0.2		# Min fraction of resources that will be discovered for each successful roll
	RESOURCE_DISCOVER_MAX_FRACTION = 0.5		# Max fraction of resources that will be discovered for each successful roll	
	FULLY_DISCOVERED_RESOURCE_DEPLETE_CHANCE_MULT = 1.0 # The chance of a resource depleting is multiplied by this when all of the resource has been discovered
	RESOURCE_DEPLETE_MIN_AMOUNT = 2				# Min amount of resources that will be depleted for each successful roll
	RESOURCE_DEPLETE_MAX_AMOUNT = 5				# Max amount of resources that will be depleted for each successful roll	
	QUALITY_OF_LIFE_MIN = 1
	QUALITY_OF_LIFE_MAX = 100
	SUBSISTENCE_OUTPUT_AVERAGE_WAGE_RATE_FACTOR = 150   # Each 1.0 of subsistence output counts as this much wage rate when setting normal wages
	PEASANT_STARTING_WAGE_RATE_FACTOR = 1.0		# For the sake of calculating starting normal wages, treat peasants as having this pop type wage multiplier
	STARTING_WAGE_RATE_MULTIPLIER = 2.0			# Starting wage rate is multiplied by this (for easy balancing)
	NORMAL_WAGE_RATE_FALLBACK = 500.0			# If it's impossible to compute a normal wage rate (e.g. if every incorporated pop works in government buildings) set it to this (weekly £ per POP_SIZE_PACKAGE employees)
	MINIMUM_WAGE_RATE = 10.0					# The wage rate can never drop below this, no matter what (weekly £ per POP_SIZE_PACKAGE employees)
	MAXIMUM_WAGE_RATE = 100000.0				# The absolute maximum that a building's wage rate can be increased to.
	CREDIT_RATIO_HEALTH_THRESHOLD = 0.5			# If the principal is smaller than this ratio of the total credit, the economy is considered to be healthy
	GOLD_RESERVE_MIN = 1000						# If Gold Reserves are computed to be lower than this, it's instead set to this
	GOLD_RESERVE_LIMIT_FACTOR = 0.2				# The base factor of annual GDP that should be provided as a Gold Reserve
	GOLD_RESERVE_RETURNS_FACTOR = 1				# How rapidly diminishing returns will cause gold reserves to drop off after the limit has been reached (higher value increases penalty)
	RETOOLING_WEEKS = 6							# How long it takes for a building to get back up to full production after switching a production method
	BUILDING_TIMED_MODIFIER_WEEKS = 52 			# Duration of a timed modifier which is applied after switching a production method
	
	URBANIZATION_PER_BUILDING = 100
	
	PRICE_REPORT_MAX_ENTRIES = 6
	
	NUM_COIN_ICONS = 13
	COIN_ICON_EARNINGS_COMPARISON_STEP = 0.15
	COIN_ICON_WAGE_COMPARISON_STEP = 0.05
	COIN_ICON_PRICE_COMPARISON_STEP = 0.12
	
	EXPENSIVE_GOODS_THRESHOLD = 1.24			# Used for some triggers and gui functions
	CHEAP_GOODS_THRESHOLD = 0.76				# Used for some triggers and gui functions

	NUM_PROFITABILITY_ICONS = 13
	PROFITABILITY_ICON_COMPARISON_STEP = 0.15

	EARNINGS_RATIO_HIGH_THRESHOLD = 1.5			# Buildings whose productivity exceeds this factor of the average will be considered high-productivity buildings
	EARNINGS_RATIO_LOW_THRESHOLD = 0.66			# Buildings whose productivity is below this factor of the average will be considered low-productivity buildings
	EARNINGS_ABSOLUTE_HIGH_THRESHOLD = 50		# Buildings whose productivity exceeds this amount will ALWAYS be considered high-productivity buildings
	EARNINGS_ABSOLUTE_LOW_THRESHOLD = 2			# Buildings whose productivity is below this amount will ALWAYS be considered low-productivity buildings
	
	SLAVE_BASKET_DEFAULT = 8					# Default level of consumer goods that a building will buy for its slaves
	SLAVE_BASKET_MIN = 1						# Min level of consumer goods that a building will buy for its slaves (the highest of this and SLAVE_BASKET_SCALED_MIN is used)
	SLAVE_BASKET_MAX = 12						# Max level of consumer goods that a building will buy for its slaves (the lowest of this and SLAVE_BASKET_SCALED_MAX is used)
	SLAVE_BASKET_SCALED_MIN = 0.5				# Multiplied by lowest non-slave wealth in the building 
	SLAVE_BASKET_SCALED_MAX = 1					# Multiplied by lowest non-slave wealth in the building

	DEBT_SLAVERY_ENSLAVEMENT_RATE = 0.005		# Under debt slavery up to this much of a state's populace can be enslaved for their debts each week
	DEBT_SLAVERY_ENSLAVEMENT_RATE_PER_POP = 0.1 # No more than this fraction of a single pop can be enslaved each week
	DEBT_SLAVERY_ENSLAVEMENT_RATE_DROP_OFF_PER_WEALTH = 0.01 # Each point of wealth reduces max enslavement rate on a pop by this 
	DEBT_SLAVERY_MAX_STATE_SLAVE_FRACTION = 0.2 # If more than this % of a state's population are slaves, do not enslave any more pops under debt slavery

	SLAVE_TRADE_MIN_VACANCIES_NEEDED_TO_IMPORT = 500 # There needs to be at least this many (non-subsistence) vacancies in buildings that can be filled by slaves in order for slave import to happen
	SLAVE_TRADE_MIN_POPULATION_TO_EXPORT = 100000	 # There needs to be at least this many people in the state in order for it to be selected, or remain valid, as a slave import target
	SLAVE_TRADE_POPULATION_FRACTION_WEIGHT = 100	 # Weight of slave population ratio in slave import marker selection
	SLAVE_TRADE_POPULATION_TOTAL_WEIGHT = 0.0002	 # Weight of total population in slave import marker selection
	SLAVE_TRADE_TURMOIL_WEIGHT = 25				# Weight of slave turmoil in slave import marker selection
	SLAVE_TRADE_DISTANCE_WEIGHT = 1				# Inverse weight (penalty) for distance in slave import marker selection
	SLAVE_TRADE_OTHER_STATES_WEIGHT = 2			# Inverse weight (penalty) for having other slave import markers
	SLAVE_TRADE_EXISTING_STATE_CULTURE_WEIGHT_MULT = 10 # Total score of state is multiplied by this if importing from states whose homeland cultures are already present in this state
	SLAVE_TRADE_NUMBER_EVALUATED_STATES = 10	# Slave import marker is selected randomly from this many potential targets with highest weight
	SLAVE_TRADE_SLAVES_PER_WEEK = 100			# Base number of slaves that will be traded per marker per week
	SLAVE_TRADE_MIN_MARKET_ACCESS = 0.1			# Minimum market access multiplier for slave trade, i.e. even at a marker with 0 market access, this fraction of the base number will be traded
	
	BUILDING_LAYOFFS_MIN_WEEKS_BETWEEN = 4		# Minimum number of weeks between layoffs
	BUILDING_LAYOFFS_DECREASE_BY = 0.15			# The ratio that layoffs will reduce employment by (e.g. 0.15 means if you're currently 57% employed, reduce that to 48.45%)

	BUILDING_CASH_RESERVES_HIGH_ROI = 0.25			# A ROI (return on investment) at or above this value is considered "high". In this context ROI means how much more money a building makes compared to how much it spends. Must be >= BUILDING_CASH_RESERVES_MED_ROI.
	BUILDING_CASH_RESERVES_MED_ROI = 0.15			# A ROI (return on investment) at exactly this value is considered "medium". In this context ROI means how much more money a building makes compared to how much it spends. Must be >= BUILDING_CASH_RESERVES_LOW_ROI.
	BUILDING_CASH_RESERVES_LOW_ROI = 0.05			# A ROI (return on investment) at or below this value is considered "low". In this context ROI means how much more money a building makes compared to how much it spends. Must be > 0.

	BUILDING_CASH_RESERVES_FILL_TIME_HIGH_ROI = 26	# Base number of weeks to fill a building's cash reserves when ROI is high. Final number of weeks is directly interpolated if ROI is between medium and high. Must be > 0.
	BUILDING_CASH_RESERVES_FILL_TIME_MED_ROI = 52	# Base number of weeks to fill a building's cash reserves when ROI is medium. Must be > 0.
	BUILDING_CASH_RESERVES_FILL_TIME_LOW_ROI = 78	# Base number of weeks to fill a building's cash reserves when ROI is low. Final number of weeks is directly interpolated if ROI is between low and medium. Must be > 0.
	
	BUILDING_CASH_RESERVES_MIN_DEPOSIT_PERCENT = 0.25	# The minimum percentage of weekly profits that building owners will try to deposit into a building's cash reserves. Must be >= 0.
	BUILDING_CASH_RESERVES_MAX_DEPOSIT_PERCENT = 0.75	# The maximum percentace of weekly profits that building owners will try to deposit into a building's cash reserves. Must be >= BUILDING_CASH_RESERVES_MIN_DEPOSIT_PERCENT

	BUILDING_CASH_RESERVES_ALGO = 1					# Temporary. Algorithm to use when deciding how owners split profits between cash reserves and dividends. 1 = complex algo, 2 = simple one
	
	BUILDING_CASH_RESERVES_STATUS_QUO_THRESHOLD = 0.5	# If cash reserves are above this fraction of max, buildings won't try to reduce expenses even if they are losing money
	
	SHIPPING_LANE_CONVOY_COST_SCALING = 0.1			# The cost for a shipping lane for each node beyond the first. So at 0.1 it goes 1.0, 1.1, 1.2 and so on.
	GOODS_DEFAULT_CONVOY_COST_MULTIPLIER = 1			# The convoy cost of shipping a single unit of goods (can be overriden in defines)
	OVERSEAS_INFRASTRUCTURE_CONVOY_COST_MULTIPLIER = 2	# Convoy cost for each infrastructure usage in overseas state for port connection shipping lanes

	CUSTOMS_UNION_CONTROLLER_MINIMUM_TARIFFS_SPLIT = 0.25	# Minimum amount of tariffs that the senior partner of a customs union gets. The rest will be split among the junior partners, according to their GDP contribution (between 0 and 1)
} 

NPolitics = {
	LEADER_IDEOLOGY_RANDOM_FACTOR = 5	# The higher this is, the more random leader ideologies will be
	
	TARIFF_LAW_GROUP = "lawgroup_trade_policy"	# Law from this group is shown to player as their tariff law
	TAX_LAW_GROUP = "lawgroup_poll_tax"	# Law from this group is shown to player as their tax law
	
	POP_APATHY_RANDOM_FACTOR = 0.1		# The higher this is, the more random the fraction of politically apathetic pops will be
	POP_IG_RANDOM_FACTOR = 0.2			# The higher this is, the more randomly distributed pops will be between valid IGs
	MIN_POP_NUMBER_LEAVE_IG = 100.0		# Min for maximum amount of pops/support that will change IG in a single update (overrides below max fraction)
	MAX_POP_FRACTION_LEAVE_IG = 0.05	# Maximum amount of a pop that can change IGs in a single update (for each IG)
	
	BASE_IG_APPROVAL = 0				# Baseline IG approval
	MIN_IG_APPROVAL = -20				# Minimum IG approval
	MAX_IG_APPROVAL = 20				# Maximum IG approval
	MIN_IG_APPROVAL_FROM_LAWS = -5		# IG cannot have approval lower than this as a total from laws 'on the book'
	MAX_IG_APPROVAL_FROM_LAWS = 5		# IG cannot have approval higher than this as a total from laws 'on the book'
	IG_APPROVAL_FROM_LOYALISTS = 15		# If 100% of the political strength of the IG is loyalist, change approval by this amount
	IG_APPROVAL_FROM_RADICALS = -15		# If 100% of the political strength of the IG is radical, change approval by this amount
	IG_LAW_DESIRE_RADICAL_CHANGE_THRESHOLD = 2 # A difference in positions this or higher is considered radical
	IG_LAW_DESIRE_EXTREME_CHANGE_THRESHOLD = 3 # A difference in positions this or higher is considered extreme
	IG_APPROVAL_FROM_LAW = 1 		# IG approval/disapproval for laws that are for/against their ideologies
	IG_APPROVAL_FROM_LAW_STRONG_STANCE = 2 		# IG approval/disapproval for laws that are strongly for/against their ideologies
	IG_APPROVAL_FROM_LAW_CHANGE = 5 		# IG approval/disapproval for changing to another law
	IG_APPROVAL_FROM_RADICAL_LAW_CHANGE = 10 		# IG approval/disapproval for changing to another law, if the change is a major one
	IG_APPROVAL_FROM_EXTREME_LAW_CHANGE = 20 		# IG approval/disapproval for changing to another law, if the change is extreme
	IG_IN_GOVERNMENT_APPROVAL = 0		# Added if IG is in government
	IG_IN_OPPOSITION_APPROVAL = 0		# Added if IG is in opposition (and not powerful)
	IG_POWERFUL_IN_OPPOSITION_APPROVAL = -1 # Added if powerful IG in opposition
	STARTUP_MIN_LEGITIMACY_IG_BARRIER = 40 # Min legitimacy when on startup we allow to remove IGs from goverment that decrease legitimacy
	APPROVAL_THRESHOLD_ANGRY = -10		# At this or below approval, IG is considered angry
	APPROVAL_THRESHOLD_UNHAPPY = -5		# At this or below approval, IG is considered unhappy
	APPROVAL_THRESHOLD_HAPPY = 5		# At this or above approval, IG is considered happy
	APPROVAL_THRESHOLD_LOYAL = 10		# At this or above approval, IG is considered loyal
	CHANGED_LAW_APPROVAL_MONTHS = 60 # How many months does the approval/disapproval for a law change linger after said law chain
	
	LAW_ENACTMENT_MIN_TOTAL_DAYS = 1		# Minimum number of total days that an enactment checkpoint can take [>=1]
	LAW_ENACTMENT_DEFAULT_BASE_DAYS = 180	# Default number of base days required to reach an enactment checkpoint [>=1]
	LAW_ENACTMENT_COOLDOWN_DAYS = 365		# When an enactment fails, or is manually stopped after at least one checkpoint, that law can't be tried to be enacted for this many days [>=0]
	LAW_ENACTMENT_ADVANCE_FACTOR = 2		# The _base_ advance chance is the success chance multiplied by this factor [>=1]
	LAW_ENACTMENT_RULER_IDEOLOGY_EFFECT = 0.05 # Ruler ideology has this impact on a law's chance to pass or stall depending on relative approval
	LAW_ENACTMENT_MOVEMENT_SUPPORT_PASS_EFFECT = 0.01 # Movement support has this impact on a law's chance to pass	
	LAW_ENACTMENT_MOVEMENT_SUPPORT_STALL_EFFECT = 0.01 # Movement support has this impact on a law's chance to stall	
	
	STATE_BUREAUCRACY_BASE_COST = 10		# The base cost per incorporated state
	STATE_BUREAUCRACY_POP_BASE_COST = 4		# The base BUR multiplier per population multiple
	STATE_BUREAUCRACY_POP_MULTIPLE = 100000	# Number of people BUR cost is based on
	MINIMUM_INVESTMENT_COST = 10			# The absolute minimum cost in BUR per investment level
	
	RETIRE_COMMANDER_CONSEQUENCE_DURATION = 5	# Number of years during which an Interest Group will be concerned about the retirement of one of their Commanders
	
	POWERFUL_IG_THRESHOLD = 0.20		# Interest groups with more Clout than this are considered to be influential
	POWERFUL_IG_CUTOFF = 0.18		# Powerful interest groups with less Clout than this will stop being influential
	POWERFUL_IG_TRAIT_BONUS = 1		# The effects of all trait modifiers from influential IGs are increased by this, 1 = +100%
	MARGINAL_IG_THRESHOLD = 0.05		# Interest Groups with Clout above this value are considered relevant while those below are marginal (if not also In Government)
	MARGINAL_IG_CUTOFF = 0.04			# Interest Groups who are already relevant will only become marginal again if they drop below this value.
	
	RECENT_PARTY_DAYS = 14				# Party is considered recently formed if activated within RECENT_PARTY_DAYS days range
	
	DEFAULT_LAW_ACTIVATION_DATE = "1836.1.1"	
	
	MAX_NUM_POLITICAL_MOVEMENTS_WITHOUT_IG_SUPPORT = 1
	MAX_NUM_POLITICAL_MOVEMENTS = 3
	POLITICAL_MOVEMENT_START_CHANCE_BASE = 5 # Base chance of a political movement starting each day if selected to be checked (1 = 1%)
	POLITICAL_MOVEMENT_START_CHANCE_SCALED = 0.05 # Additional chance of a political movement starting scaled with potential support
	POLITICAL_MOVEMENT_START_CHANCE_NUM_MOVEMENTS_DIVISOR = 2 # If we already have movements, divide start chance of a new movement by ( 1 + this * cur num movements )
	POLITICAL_MOVEMENT_TO_PRESERVE_CHECK_TO_START_CHANCE = 25 # Chance that a political movement is checked at all on a daily basis if it's a movement to preserve (for performance reasons)
	POLITICAL_MOVEMENT_TO_RESTORE_CHECK_TO_START_CHANCE = 2.0 # Chance that a political movement is checked at all on a daily basis if it's a movement to restore (for performance reasons)
	POLITICAL_MOVEMENT_TO_ENACT_CHECK_TO_START_CHANCE = 1.0 # Chance that a political movement is checked at all on a daily basis if it's a movement to enact (for performance reasons)
	POLITICAL_MOVEMENT_MIN_SUPPORT_TO_START = 10 # If a political movement would have less support than this, it can't start
	POLITICAL_MOVEMENT_MIN_SUPPORT_TO_REMAIN = 5 # If a political movement falls to less support than this, disband it
	POLITICAL_MOVEMENT_RADICALISM_TARGET_FROM_ANGRY_IG_CLOUT = 300 # At 100% clout of angry IGs supporting this, increase radicalism by this much
	POLITICAL_MOVEMENT_RADICALISM_TARGET_FROM_RADICALS = 500 # At 100% of total population as supporting radicals, increase radicalism by this much
	POLITICAL_MOVEMENT_SUPPORT_FROM_POPULATION = 100 # At 100% of population supporting the movement
	POLITICAL_MOVEMENT_SUPPORT_FROM_CLOUT = 100 # At 100% of political clout supporting the movement
	POLITICAL_MOVEMENT_APATHY_MULTIPLIER = 0.5 # This % of politically apathetic pops also won't join movements even if it's in their interest to do so
	POLITICAL_MOVEMENT_LAW_APPROVAL_POP_SUPPORT_BASE_FACTOR = 0.5 # How many pops belonging to an IG that approves of enacting a law supports the movement to enact the law (base)
	POLITICAL_MOVEMENT_LAW_APPROVAL_POP_SUPPORT_SCALED_FACTOR = 0.25 # How many pops belonging to an IG that approves of enacting a law supports the movement to enact the law (for each approval after 1)
	POLITICAL_MOVEMENT_LAW_APPROVAL_POP_SUPPORT_RESTORE_FACTOR = 0.25 # How many (extra) pops belonging to an IG that approves of enacting a law supports a movement to restore a law
	POLITICAL_MOVEMENT_MIN_DURATION = 12
	POLITICAL_MOVEMENT_MONTHLY_RADICALS = 0.01 		# This fraction of pops backing a non-placated political movement become more radical each month
	POLITICAL_MOVEMENT_LOYALISTS_AT_SUCCESS = 0.25 	# This fraction of pops backing a political movement become more loyalist if movement succeeds
	POLITICAL_MOVEMENT_DISBAND_CHANCE = 0.02 # Chance of a political movement that has lasted longer than POLITICAL_MOVEMENT_MIN_DURATION disbanding each day if radicalism for it is below REVOLUTIONARY_PROGRESSION_FROM_RADICALISM - scales with number of months that have passed (1 = 1%)
	POLITICAL_MOVEMENT_DISBAND_CHANCE_SUPPORT_DIVISOR = 0.01 # Political movement's chance to randomly disband is divided by ( 1 + support * this )
	
	REVOLUTION_SUPPORT_STATE_MULTIPLIER = 0.015		# A revolution will have the backing of ( support * this fraction of states )
	REVOLUTION_MAX_STATE_FRACTION = 0.75			# A revolution cannot be supported by more than this fraction of the states in the country
	MIN_RADICALISM_FOR_REVOLUTION_PROGRESSION = 50	# A political movement must have this much radicalism for a revolution to start organizing
	MIN_RADICALISM_FOR_REVOLUTION_START = 100		# At this amount of radicalism, allow full speed revolutionary progression and a revolution to start
	MAX_PROGRESS_FOR_UNSUPPORTED_REVOLUTIONS = 0.5  # Revolutions from movements that aren't supported by any IGs won't progress further than this
	REVOLUTIONS_PROGRESS_DECAY = 0.01				# Revolution meter without sufficient support
	REVOLUTIONARY_ADJACENCY_BIAS = 4				# higher state selection bias for adjacent states
	
	# Revolutionary states scoring
	REVOLUTION_STATE_WEIGHT_LOCAL_CLOUT_SHARE = 1.0	 # Local clout weight at the moment of revolution secession
	REVOLUTION_STATE_WEIGHT_NATIONAL_AVERAGE = 1.0	 # Local national revolutionary share
	BATTALION_CIVIL_WAR_WEIGHT = 1.0				 # Battalion revolutionary share
	FLOTILLA_CIVIL_WAR_WEIGHT = 1.0					 # Flotilla revolutionary share
	REVOLUTION_STATE_WEIGHT_UNIT_MIN = 0.1			 # Min Unit Weight
	
	REVOLUTION_LOSER_IG_DEBUFF_YEARS = 10			# Debuff duration in years for IG that looses in a revolution
	NUM_REVOLUTIONARY_LAW_CHANGES = 2				# In addition to the main reason for the revolution, a revolutionary constitution will contain this many additional law changes

	SECESSION_LOSER_STATE_RADICAL_GAIN_REDUCTION_WEEKS = 52	# Number of weeks to reduce passive radical gain in states that lost a secession (decaying)
	SECESSION_WON_LOYALISTS_INCREASED_PERCENTAGE = 0.5		# This percentage of pops in the secession country of the seceded culture will become more loyal after a secession is victorious
	SECESSION_START_RADICALS_REDUCED_PERCENTAGE = 1.0		# The number of radicals of pops of the seceded culture in states that seceded will decrease by this amount when a secession war begins
	SECESSION_LOST_RADICALS_REDUCED_PERCENTAGE = 1.0		# The number of radicals of pops of the seceded culture in states that seceded will decrease by this amount when a secession is crushed
	REVOLUTION_START_RADICALS_REDUCED_PERCENTAGE = 1.0		# The number of radicals of pops will decrease by this amount when a revolution starts (relative to membership in defeated IGs)
	REVOLUTION_LOST_RADICALS_REDUCED_PERCENTAGE = 1.0		# The number of radicals of pops will decrease by this amount when a revolution is crushed (relative to membership in defeated IGs)

	IG_SUPPRESSION_COST = 200						# The amount of AUT it costs to Suppress an IG
	IG_BOLSTER_COST = 200							# The amount of AUT it costs to Bolster an IG
	DEFAULT_GOODS_TAX_COST = 100					# The amount of AUT it costs to tax a good by default

	TURMOIL_STATE_EFFECTS_THRESHOLD = 0.25				# How much turmoil a state needs to have before it gets any state-wide effects
	TURMOIL_STATE_HIGH_EFFECTS_THRESHOLD = 0.50			# Above this turmoil, add a harsher modifier
	TURMOIL_STATE_EXTREME_EFFECTS_THRESHOLD = 0.75		# Above this turmoil, add the harshest modifier
	SECESSION_TURMOIL_CUTOFF = 0.5						# Turmoil requires for cultures to start secession
	SECESSION_WEEKLY_BASE_CHANCE = 0.001				# weekly base chance for culture to start secession movement
	SECESSION_WEEKLY_CHANCE_EXCESS_DIV = 100			# Excess turmoil is divided by this and used to increase chance for secession movements
	MIN_POP_SIZE_TO_SECEDE = 100000						# Num pops (including dependents) needed for a secession movement to start
	SECESSION_STATE_CUTOFF_PERCENT = 0.33				# Required pop percentage in State to be egligble for secession
	SECESSION_TURMOIL_EXCESS_DIV = 1					# Excess turmoil is divided by this and used to increase secession movements
	SECESSION_COOLDOWN_YEARS = 5
	
	MIN_INSTITUTION_INVESTMENT = 1						# Lowest Investment Level for active Institutions (modifier is clamped to this)
	MAX_INSTITUTION_INVESTMENT = 5						# Highest Investment Level for active Institutions (modifier is clamped to this)
	DAILY_INSTITUTION_SIZE_CHANGE = 0.0028				# Percent increase / decrease in Institution Size per day (0.0028 ~ 1/365)
	
	# Code-cached laws relevant to various game mechanics outside of their modifier effects
	LAW_SLAVERY_BANNED = "law_slavery_banned"
	LAW_DEBT_SLAVERY = "law_debt_slavery"
	LAW_SLAVE_TRADE = "law_slave_trade"
	LAW_LEGACY_SLAVERY = "law_legacy_slavery"
	LAW_ISOLATIONISM = "law_isolationism"
	LAW_FREE_TRADE = "law_free_trade"

	INITIAL_MOMENTUM_VARIANCE = 0.5						# How much Momentum should vary at the start of the election period
	ELECTION_INTERVAL_YEARS = 4							# How many years normally pass between elections
	CAMPAIGN_PERIOD_MONTHS = 6							# How long the Campaign Period before the election is

	REFORM_GOVERNMENT_PERIOD = 6 						# How many months after election you can reform government for free
	REFORM_GOVERNMENT_RADICALIZATION_RATE = 0.25 		# How many percent of a IG's supporters that will get radicalized when removed from government.

	RADICALISM_MEDIUM_THRESHOLD = 20
	RADICALISM_HIGH_THRESHOLD = 40
	RADICALISM_VERY_HIGH_THRESHOLD = 60
	RADICALISM_EXTREME_THRESHOLD = 80
	RADICALISM_CRITICAL_THRESHOLD = 100

	SUPPORT_MEDIUM_THRESHOLD = 20
	SUPPORT_HIGH_THRESHOLD = 40
	SUPPORT_VERY_HIGH_THRESHOLD = 60
	SUPPORT_EXTREME_THRESHOLD = 80
	SUPPORT_CRITICAL_THRESHOLD = 100
}